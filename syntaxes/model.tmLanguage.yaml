%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
# Alexander Danylchenko
# BMC model syntax file highligh.
# 2017-08-14 - Latest version.
# Will be used also to convert in Atom CSON format
name: model
file_extensions:
  - model
scope: source.model

contexts:

  main:
    - include: traverse
    - include: all_keys
    - include: errors
    - include: keywords_all
    - include: lines

    - match: \(
      push: brackets
    - match: \)
      scope: invalid.illegal.stray-bracket-end

# repository: OLD FORMAT DO NOT UNCOMMENT!
  brackets:
    - match: \)
      pop: true
    - include: main

# NEEDED ATTRIBUTES:
  keywords_attrs:
    - match: (\")(key|name|type|version|short_name|install_root|listening_ports|product_version)(\")
      captures:
        1: keyword.control.model
        2: variable.parameter.model
        3: keyword.control.model
        # 1: storage.type.model
  keywords_all:
    - include: keywords_attrs

# Lines and comments and quotes:
# // THIS LINE`
  comment_line:
    - match: //.*
      scope: comment.line.model

  comment_TODO_line:
    - match: (//)\s?(TODO\:)
      comment: variable.parameter.model
      captures:
        1: comment.line.model
        2: keyword.control.model
      push:
        - match: (.*)
          captures:
            1: variable.parameter.model
          pop: true

  double_qouted_line:
    # - match: '\"(?:[^\\"]|\\\\|\\")*\"'
    - match: '(\")((?:[^\\"]|\\\\|\\")*)(\")'
      comment: variable.parameter.model
      captures:
        1: keyword.control.model
        2: string.quoted.single.model
        3: keyword.control.model
      # push:
      #   # - match: \#(?:(\w+)(:|\.))+(\w+)
      #   - match: '(\#InferredElement\:Inference\:Contributor\:Package\.name)'
      #     captures:
      #       1: keyword.control.model
      #     pop: true

  percent_line:
    - match: "%([^%]+)%"
      scope: keyword.control.model
      captures:
        1: variable.parameter.model

  qouted_line:
    - match: '\''([^'']+?)\'''
      captures:
        1: string.quoted.single.model

  square_brackets_line_int:
    - match: '\[(-?\d+)\]'
      captures:
        1: constant.numeric.model
  square_brackets_line_word:
    - match: '\[(\w+[^\d+])\]'
      captures:
        1: variable.parameter.model
  lines:
    - include: percent_line
    - include: comment_TODO_line
    - include: comment_line
    - include: qouted_line
    - include: double_qouted_line
    - include: square_brackets_line_word
    - include: square_brackets_line_int
    - include: all_keys

# ERRORS:
  # none
  none_attr:
    - match: '\b(None)'
      captures:
        1: invalid.illegal.model
  hash_attr:
    - match: '(#)\s+"(\S+)":\s+(None)'
      captures:
        1: invalid.illegal.model
        2: keyword.control.tplpre
        3: invalid.illegal.model
  errors:
    - include: none_attr
    - include: hash_attr


# Keys
  plus:
    - match: \+
      scope: keyword.operator.assignment.model
  var_assign:
    - match: \:\=
      # scope: keyword.operator.assignment.model
      scope: constant.numeric.integer.model
  double_q:
    - match: '(\"\"){1}'
      scope: comment.model
  single_q:
    - match: '(\''\''){1}'
      scope: comment.model
  equal:
    - match: \=
      scope: keyword.operator.assignment.model
  less:
    - match: \<
      scope: keyword.operator.model
  less_equal:
    - match: \<\=
      scope: keyword.operator.model
  more:
    - match: \>
      scope: keyword.operator.model
  more_equal:
    - match: \>\=
      scope: keyword.operator.model
  decimal:
    - match: \s\d+\s
      scope: constant.numeric.integer.model
  decimal_ext:
    - match: \s\d+
  minus_decimal:
    - match: \s\-\d+\s
      scope: constant.numeric.integer.model
  just_do:
    - match: (\.)
      scope: punctuation.accessor.model
      captures:
        1: keyword.operator.model
  just_doble_dot:
    - match: (\:)
      scope: punctuation.accessor.model
      captures:
        1: keyword.operator.model
  all_keys:
    - include: var_assign
    - include: equal
    - include: less
    - include: more
    - include: more_equal
    - include: less_equal
    - include: plus
    - include: decimal
    - include: minus_decimal
    - include: decimal_ext
    - include: just_do
    - include: just_doble_dot



# Path to TRAVERCE
  traverse:
    # - match: (\#(?:(\w+)(:|\.))+(\w+))
    - match: \"(\#(?:(\w+)(:|\.))+(\w+))\"\:\s\[
      comment: entity.name.function.model
      captures:
        1: entity.name.function.model
        2: variable.parameter.model
        # 3: keyword.control.model
        4: keyword.control.model
        # 5: keyword.control.model
      # push:
        # - match: '\b(Package)'
          # captures:
            # 1: string.quoted.single.model
          # pop: false
        # - match: '\b(SoftwareInstance)'
          # captures:
            # 1: string.quoted.single.model
          # pop: false
        # - match: '\b(InferredElement)'
        # - match: '\S+(InferredElement)\S+'
          # captures:
            # 1: string.quoted.single.model
          # pop: true